name: Packer Status Check

on:
  pull_request:
    branches:
      - main

jobs:
  packer-status-check:
    name: Packer Status Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Print Current Directory
        run: |
          pwd
          ls -l
        shell: bash

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: '1.8.6'

      - name: Create ZIP Archive
        run: zip -r webapp.zip . -x ".git/*" ".gitignore" ".github/*"
  
      
      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer
    
  
      - name: Initialize Packer
        run: packer init -upgrade aws-debian.pkr.hcl || exit 1
        working-directory: packer
  
      - name: Run 'packer fmt'
        run: |
          if packer fmt -check aws-debian.pkr.hcl; then
            echo "Packer template is formatted correctly."
          else
            echo "Packer template is not formatted correctly. Please format the template and try again."
            exit 1
          fi
        working-directory: packer  
          
      - name: Print Contents of Directory
        run: ls -l
  
      - name: Run 'packer validate'
        run: |
          if packer validate aws-debian.pkr.hcl; then
            echo "Packer template is valid."
          else
            echo "Packer template is not valid. Please fix the issues in the template and try again."
            exit 1
          fi
        working-directory: packer
  
      - name: Set up AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          aws configure set default.output json
          aws configure set profile.dev.aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set profile.dev.aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
          
      - name: Build AMI with Packer
        run: packer build aws-debian.pkr.hcl
        working-directory: packer

      - name: Get AMI ID and save it in Github env
        run: |
          echo AMI_ID=$(jq -r '.builds[-1].artifact_id' ./packer/manifest.json | cut -d ":" -f2) >> $GITHUB_ENV
        shell: bash

      - name: Create New Launch Template Version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ec2 create-launch-template-version --launch-template-name csye6225_asg --source-version 1 --launch-template-data '{"ImageId":"${{ env.AMI_ID }}"}'
          echo "New Launch template version created"

      - name: Instance refresh to use new Launch template version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name web-app-auto-scaling-group
          echo "Instance refresh completed"

      